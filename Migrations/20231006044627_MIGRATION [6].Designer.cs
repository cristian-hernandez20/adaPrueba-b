// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using adaPrueba_b.Data;

#nullable disable

namespace adaPrueba_b.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231006044627_MIGRATION [6]")]
    partial class MIGRATION6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("adaPrueba_b.Models.Product", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("descript")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric(15, 0)");

                    b.Property<decimal>("quantity")
                        .HasColumnType("numeric(3, 0)");

                    b.HasKey("id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            id = new Guid("86ca7c32-d03e-41bb-b69a-843522bcc334"),
                            descript = "Audifonos Sony MX1000, de muy buena calidad",
                            image = "",
                            name = "Audifonos",
                            price = 1000000m,
                            quantity = 10m
                        },
                        new
                        {
                            id = new Guid("2956ac13-b649-47e6-9ff6-9ae1ed312a3c"),
                            descript = "Estuche para Audifonos Sony MX1000, de muy buena calidad",
                            image = "",
                            name = "Estuche audifono",
                            price = 20000m,
                            quantity = 10m
                        });
                });

            modelBuilder.Entity("adaPrueba_b.Models.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            id = 1,
                            roleName = "Administrador"
                        },
                        new
                        {
                            id = 2,
                            roleName = "Usuario General"
                        });
                });

            modelBuilder.Entity("adaPrueba_b.Models.Shopping", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("id_product")
                        .HasColumnType("uuid");

                    b.Property<Guid>("id_user")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.HasIndex("id_product");

                    b.HasIndex("id_user");

                    b.ToTable("Shopping");
                });

            modelBuilder.Entity("adaPrueba_b.Models.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("addres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("identification")
                        .HasColumnType("numeric(15, 0)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("nameUser")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<decimal>("phone")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<decimal>("rol")
                        .HasColumnType("numeric(1, 0)");

                    b.HasKey("id");

                    b.HasIndex("nameUser")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("adaPrueba_b.Models.Shopping", b =>
                {
                    b.HasOne("adaPrueba_b.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("id_product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("adaPrueba_b.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("id_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
